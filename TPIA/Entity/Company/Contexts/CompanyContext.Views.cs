//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(TPIA.Entity.Company.Contexts.CompanyContext),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySetsb46ce1e3d88f638da30bc3981132c5920bf0cc5e01d1919cf2e2df8e1b74243a))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework Power Tools", "0.9.0.0")]
    internal sealed class ViewsForBaseEntitySetsb46ce1e3d88f638da30bc3981132c5920bf0cc5e01d1919cf2e2df8e1b74243a : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "b46ce1e3d88f638da30bc3981132c5920bf0cc5e01d1919cf2e2df8e1b74243a"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "CodeFirstDatabase.Company")
            {
                return GetView0();
            }

            if (extentName == "CodeFirstDatabase.CompanyProduct")
            {
                return GetView1();
            }

            if (extentName == "CompanyContext.Company")
            {
                return GetView2();
            }

            if (extentName == "CompanyContext.CompanyProduct")
            {
                return GetView3();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Company.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Company
        [CodeFirstDatabaseSchema.Company](T1.Company_CID, T1.Company_CompanyName, T1.Company_Manager, T1.Company_Sales, T1.Company_AboutUs, T1.Company_Address, T1.Company_Phone, T1.Company_Tax, T1.Company_EMail, T1.Company_MainProducts, T1.Company_SiteURL, T1.Company_IsEnable)
    FROM (
        SELECT 
            T.CID AS Company_CID, 
            T.CompanyName AS Company_CompanyName, 
            T.Manager AS Company_Manager, 
            T.Sales AS Company_Sales, 
            T.AboutUs AS Company_AboutUs, 
            T.Address AS Company_Address, 
            T.Phone AS Company_Phone, 
            T.Tax AS Company_Tax, 
            T.EMail AS Company_EMail, 
            T.MainProducts AS Company_MainProducts, 
            T.SiteURL AS Company_SiteURL, 
            T.IsEnable AS Company_IsEnable, 
            True AS _from0
        FROM CompanyContext.Company AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.CompanyProduct.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CompanyProduct
        [CodeFirstDatabaseSchema.CompanyProduct](T1.CompanyProduct_PID, T1.CompanyProduct_CID, T1.CompanyProduct_ProductTitle, T1.CompanyProduct_ProductImgURL, T1.CompanyProduct_ProductDesc)
    FROM (
        SELECT 
            T.PID AS CompanyProduct_PID, 
            T.CID AS CompanyProduct_CID, 
            T.ProductTitle AS CompanyProduct_ProductTitle, 
            T.ProductImgURL AS CompanyProduct_ProductImgURL, 
            T.ProductDesc AS CompanyProduct_ProductDesc, 
            True AS _from0
        FROM CompanyContext.CompanyProduct AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CompanyContext.Company.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Company
        [TPIA.Entity.Company.Contexts.Company](T1.Company_CID, T1.Company_CompanyName, T1.Company_Manager, T1.Company_Sales, T1.Company_AboutUs, T1.Company_Address, T1.Company_Phone, T1.Company_Tax, T1.Company_EMail, T1.Company_MainProducts, T1.Company_SiteURL, T1.Company_IsEnable)
    FROM (
        SELECT 
            T.CID AS Company_CID, 
            T.CompanyName AS Company_CompanyName, 
            T.Manager AS Company_Manager, 
            T.Sales AS Company_Sales, 
            T.AboutUs AS Company_AboutUs, 
            T.Address AS Company_Address, 
            T.Phone AS Company_Phone, 
            T.Tax AS Company_Tax, 
            T.EMail AS Company_EMail, 
            T.MainProducts AS Company_MainProducts, 
            T.SiteURL AS Company_SiteURL, 
            T.IsEnable AS Company_IsEnable, 
            True AS _from0
        FROM CodeFirstDatabase.Company AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CompanyContext.CompanyProduct.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CompanyProduct
        [TPIA.Entity.Company.Contexts.CompanyProduct](T1.CompanyProduct_PID, T1.CompanyProduct_CID, T1.CompanyProduct_ProductTitle, T1.CompanyProduct_ProductImgURL, T1.CompanyProduct_ProductDesc)
    FROM (
        SELECT 
            T.PID AS CompanyProduct_PID, 
            T.CID AS CompanyProduct_CID, 
            T.ProductTitle AS CompanyProduct_ProductTitle, 
            T.ProductImgURL AS CompanyProduct_ProductImgURL, 
            T.ProductDesc AS CompanyProduct_ProductDesc, 
            True AS _from0
        FROM CodeFirstDatabase.CompanyProduct AS T
    ) AS T1");
        }
    }
}
